//──────────────────────────────────────────────────────────────────────────
#include <SYSTEM.H>
#include <FILEIO/LOADPCX.H>

#include "PCXHEAD.H"

//──────────────────────────────────────────────────────────────────────────
static	int32_t next_char( uint32_t fd, uint8_t *pt)
{
	if ( Index == SIZE_BUF )
	{
		Index = 0		;
		Read( fd, pt, SIZE_BUF );
	}

	return(pt[Index++])	;
}

//──────────────────────────────────────────────────────────────────────────
void	LoadPCX(char *file_name, void *screen, int32_t *resx, int32_t *resy, void *tabcol)
{
	int32_t 	col, row, sizex			;
	int32_t	fd				;
	uint8_t	*buffer, file_buf[SIZE_BUF]	;


	buffer = (uint8_t*)screen		;

	fd = OpenRead( file_name )	;

	if(!fd)
	{
		return	;
	}

	Read( fd, &PcxHeader, 128L )	;

	Index = SIZE_BUF		;// For Load in next_char

	row	= PcxHeader.ymax-PcxHeader.ymin	;
	sizex	= PcxHeader.xmax-PcxHeader.xmin	;

	if(resy)	*resy = row+1	;
	if(resx)	*resx = sizex+1	;

	for (; row>=0; row-- )
	{
		for ( col=sizex; col>=0; )
		{
			int32_t	ch, pass	;

			ch = next_char( fd, file_buf )	;
			if ((ch & 0xC0) != 0xC0)
			{
				pass = 1		;
			}
			else
			{
				pass = ch & 0x3F	;
				ch = next_char( fd, file_buf );
			}

			col -= pass	;

			for (; pass>0; pass-- )
			{
				*buffer++ = (uint8_t)ch	;
			}
		}
	}

	Seek( fd, -768, SEEK_FROM_END )	;

	Read( fd, tabcol, 768 )		;

	Close( fd )	;
}

//──────────────────────────────────────────────────────────────────────────
